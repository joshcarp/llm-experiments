//Delete a node from a binary search tree

func deleteNode:{}any root:{}any key:num
    if root == {}
        return {}
    end
    if key < root["val"]
        root["left"] = deleteNode root["left"] key
    else if key > root["val"]
        root["right"] = deleteNode root["right"] key
    else
        if root["left"] == {}
            return root["right"]
        else if root["right"] == {}
            return root["left"]
        else
            root["val"] = minVal root["right"]
            root["right"] = deleteNode root["right"] root["val"]
        end
    end
    return root
end

func minVal:{}any node:{}any
    while node["left"] != {}
        node = node["left"]
    end
    return node
end

    root := {val:5 left:{val:3 left:{val:2 left:{} right:{}} right:{val:4 left:{} right:{}}} right:{val:8 left:{val:7 left:{} right:{}} right:{val:9 left:{} right:{}}}}
    print (deleteNode root 3)
    print (deleteNode root 5)
    print (deleteNode root 8)

