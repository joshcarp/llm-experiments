
func TreeNode:{}any
    self:{}any
    self.val = 0
    self.left = {}
    self.right = {}
    return self
end

func Solution:{}any
    self:{}any
    return self
end

func levelOrderBottom:any self:{}any root:{}any
    if root == {}
        return []
    end
    stack := [[root]]
    res := []
    while (len stack) > 0
        top := stack[-1]
        stack = stack[:-1]
        res = [[node.val for node in top]] + res
        temp := []
        for node := range top
            if node.left != {}
                temp = temp + [node.left]
            end
            if node.right != {}
                temp = temp + [node.right]
            end
        end
        if (len temp) > 0
            stack = stack + [temp]
        end
    end
    return res
end

func test
    root := (TreeNode)
    root.val = 3
    root.left = (TreeNode)
    root.left.val = 9
    root.right = (TreeNode)
    root.right.val = 20
    root.right.left = (TreeNode)
    root.right.left.val = 15
    root.right.right = (TreeNode)
    root.right.right.val = 7
    sol := (Solution)
    assert [[3] [20 9] [15 7]] (levelOrderBottom sol root)
end
