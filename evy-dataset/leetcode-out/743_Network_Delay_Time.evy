
func networkDelayTime:num times:[][]num N:num K:num
    graph := {}num
    for i := range (len times)
        u := times[i][0]
        v := times[i][1]
        w := times[i][2]
        if !(has graph u)
            graph[u] = []
        end
        graph[u] = graph[u] + [[v w]]
    end
    dist := {}num
    for i := range 1 (N + 1)
        dist[i] = -1
    end
    dist[K] = 0
    seen := [false] * (N + 1)
    while true
        candNode := -1
        candDist := -1
        for i := range 1 (N + 1)
            if !(seen[i]) and (candDist == -1 or dist[i] < candDist)
                candDist = dist[i]
                candNode = i
            end
        end
        if candNode == -1
            break
        end
        seen[candNode] = true
        if has graph candNode
            for nei, d := range graph[candNode]
                if dist[nei] == -1 or dist[candNode] + d < dist[nei]
                    dist[nei] = dist[candNode] + d
                end
            end
        end
    end
    ans := -1
    for i := range 1 (N + 1)
        if dist[i] == -1
            return -1
        end
        if ans == -1 or dist[i] > ans
            ans = dist[i]
        end
    end
    return ans
end

func test
    assert 2 (networkDelayTime [[2 1 1] [2 3 1] [3 4 1]] 4 2)
    assert -1 (networkDelayTime [[1 2 1]] 2 2)
    assert 2 (networkDelayTime [[1 2 1] [2 3 2] [1 3 2]] 3 1)
    assert 2 (networkDelayTime [[1 2 1] [2 1 3]] 2 2)
    assert 1 (networkDelayTime [[1 2 1]] 2 1)
    assert 4 (networkDelayTime [[1 2 1] [1 3 2] [2 3 2] [3 4 3] [4 5 3] [5 6 3] [6 7 3] [7 8 3] [8 9 3] [9 10 3] [10 1 3]] 10 1)
end
test
// output:
//line 33 column 20: illegal character ","
