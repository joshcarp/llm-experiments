
func Node:{}any
    self:{}any
    self.val := 0
    self.left := {}
    self.right := {}
    return self
end

func Solution:{}any
    self:{}any
    return self
end

func buildTree self:{}any preorder:[]num inorder:[]num
    n := len inorder
    inOrderMap := {}
    for i := range n
        inOrderMap[inorder[i]] = i
    end
    return self.buildTreeUtil preorder inorder inOrderMap 0 (n - 1) 0 (n - 1)
end

func buildTreeUtil self:{}any preorder:[]num inorder:[]num inOrderMap:{}num pStart:num pEnd:num iStart:num iEnd:num
    if pStart > pEnd or iStart > iEnd
        return {}
    end
    root := (Node)
    root.val = preorder[pStart]
    rootIdx := inOrderMap[root.val]
    root.left = self.buildTreeUtil preorder inorder inOrderMap (pStart + 1) (pStart + rootIdx - iStart + 1) iStart (rootIdx - 1)
    root.right = self.buildTreeUtil preorder inorder inOrderMap (pStart + rootIdx - iStart + 1) pEnd (rootIdx + 1) iEnd
    return root
end

func test
    preorder := [3 9 20 15 7]
    inorder := [9 3 15 20 7]
    sol := (Solution)
    root := buildTree sol preorder inorder
    print root
end
test
// output:
//line 4 column 14: expected "=", got ":="
//line 5 column 15: expected "=", got ":="
//line 6 column 16: expected "=", got ":="
//line 19 column 19: map index expects string, found num
//line 19 column 9: at least one statement is required here
//line 21 column 31: expected end of line, found preorder
//line 21 column 12: expected no return value, found any
//line 15 column 27: "preorder" declared but not used
//line 26 column 16: expected no return value, found {}
//line 30 column 26: map index expects string, found any
//line 30 column 35: invalid inferred declaration for "rootIdx"
//line 31 column 36: expected end of line, found preorder
//line 32 column 37: expected end of line, found preorder
//line 33 column 12: expected no return value, found {}any
//line 24 column 46: "inorder" declared but not used
//line 40 column 43: invalid declaration, function "buildTree" has no return value
//line 41 column 11: unknown variable name "root"
