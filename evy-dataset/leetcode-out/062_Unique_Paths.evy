
func uniquePaths:num m:num n:num
    dmap := [[]] * m
    for i := range m
        dmap[i] = [0] * n
    end
    for i := range m
        dmap[i][0] = 1
    end
    for j := range n
        dmap[0][j] = 1
    end
    for i := range 1 m
        for j := range 1 n
            l := 0
            u := 0
            if i - 1 >= 0
                u = dmap[i - 1][j]
            end
            if j - 1 >= 0
                l = dmap[i][j - 1]
            end
            dmap[i][j] = l + u
        end
    end
    return dmap[m - 1][n - 1]
end

func test
    assert 28 (uniquePaths 3 7)
    assert 3 (uniquePaths 3 2)
    assert 1 (uniquePaths 1 1)
end
test
// output:
//panic: internal error: line 3 column 18 incompatible types: target [][]any, value [][]
//
//goroutine 1 [running]:
//evylang.dev/evy/pkg/parser.wrapAny({0x104bc7898, 0x1400010c6c0}, 0x1400000cf78)
//	/home/runner/work/evy/evy/pkg/parser/ast.go:1176 +0x69c
//evylang.dev/evy/pkg/parser.(*parser).parseInferredDeclStatement(0x14000108be0)
//	/home/runner/work/evy/evy/pkg/parser/parser.go:550 +0x2a0
//evylang.dev/evy/pkg/parser.(*parser).parseStatement(0x14000108be0)
//	/home/runner/work/evy/evy/pkg/parser/parser.go:325 +0x6c
//evylang.dev/evy/pkg/parser.(*parser).parseBlockWithEndTokens(0x14000108be0, 0x14000036fd0)
//	/home/runner/work/evy/evy/pkg/parser/parser.go:683 +0x88
//evylang.dev/evy/pkg/parser.(*parser).parseBlock(...)
//	/home/runner/work/evy/evy/pkg/parser/parser.go:671
//evylang.dev/evy/pkg/parser.(*parser).parseFunc(0x14000108be0)
//	/home/runner/work/evy/evy/pkg/parser/parser.go:215 +0x1ec
//evylang.dev/evy/pkg/parser.(*parser).parseProgram(0x14000108be0)
//	/home/runner/work/evy/evy/pkg/parser/parser.go:169 +0x258
//evylang.dev/evy/pkg/parser.(*parser).parse(...)
//	/home/runner/work/evy/evy/pkg/parser/parser.go:152
//evylang.dev/evy/pkg/parser.Parse({0x14000022580?, 0x140001a3260?}, {0x140001a3260?, 0x140001a3140?, 0x140001a3170?})
//	/home/runner/work/evy/evy/pkg/parser/parser.go:28 +0x40
//evylang.dev/evy/pkg/evaluator.(*Evaluator).Run(0x14000108b40, {0x14000022580, 0x28f})
//	/home/runner/work/evy/evy/pkg/evaluator/evaluator.go:169 +0x120
//main.(*runCmd).Run(0x1400007ef78)
//	/home/runner/work/evy/evy/main.go:152 +0x198
//reflect.Value.call({0x104b6a480?, 0x1400007ef78?, 0x14000037a98?}, {0x104644530, 0x4}, {0x14000037b58, 0x0, 0x10461bd08?})
//	/home/runner/.cache/hermit/pkg/go-1.22.3/src/reflect/value.go:596 +0x970
//reflect.Value.Call({0x104b6a480?, 0x1400007ef78?, 0x104b63b60?}, {0x14000037b58?, 0x0?, 0x14000037b10?})
//	/home/runner/.cache/hermit/pkg/go-1.22.3/src/reflect/value.go:380 +0x94
//github.com/alecthomas/kong.callFunction({0x104b6a480?, 0x1400007ef78?, 0x14000037d60?}, 0x140001a28a0)
//	/home/runner/go/pkg/mod/github.com/alecthomas/kong@v0.9.0/callbacks.go:98 +0x390
//github.com/alecthomas/kong.(*Context).RunNode(0x1400014e080, 0x1400016a0f0, {0x0, 0x0, 0x1400015a280?})
//	/home/runner/go/pkg/mod/github.com/alecthomas/kong@v0.9.0/context.go:774 +0x630
//github.com/alecthomas/kong.(*Context).Run(0x104b31620?, {0x0?, 0x14000157f18?, 0x7?})
//	/home/runner/go/pkg/mod/github.com/alecthomas/kong@v0.9.0/context.go:799 +0x138
//main.main()
//	/home/runner/work/evy/evy/main.go:97 +0x150
