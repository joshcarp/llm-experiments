
func summaryRanges: []string nums: []num
    res := []string
    start := 0
    ls := len nums
    for i := range ls
        if i + 1 < ls and nums[i + 1] == nums[i] + 1
            continue
        end
        if i == start
            res = res + [sprint nums[start]]
        else
            res = res + [sprintf "%v->%v" nums[start] nums[i]]
        end
        start = i + 1
    end
    return res
end

func test
    assert ["0" "2->4" "6"] (summaryRanges [0 1 2 3 4 6])
    assert ["0" "2->4" "6->8"] (summaryRanges [0 1 2 3 4 6 7 8])
    assert ["0"] (summaryRanges [0])
    assert [] (summaryRanges [])
end
test
// output:
//line 3 column 14: expected end of line, found "string"
//line 8 column 13: unknown function "continue"
//line 8 column 13: at least one statement is required here
//line 11 column 26: function call must be parenthesized: (sprint ...)
//line 11 column 13: at least one statement is required here
//line 13 column 26: function call must be parenthesized: (sprintf ...)
//line 13 column 13: at least one statement is required here
//line 17 column 12: expected return value of type []string, found []any
