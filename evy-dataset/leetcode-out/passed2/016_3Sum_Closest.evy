
func threeSumClosest:num nums:[]num target:num
    ls := len nums
    sort_nums := nums[:]
    sort sort_nums
    res := nums[0] + nums[1] + nums[2]
    for i := range ls-2
        j := i + 1
        k := ls - 1
        while j < k
            temp := sort_nums[i] + sort_nums[j] + sort_nums[k]
            if (abs (target - temp)) < (abs (target - res))
                res = temp
            end
            if temp < target
                j = j + 1
            else
                k = k - 1
            end
        end
    end
    return res
end

func sort arr:[]num
    // bubble sort
    for endIdx := range (len arr)-1 0 -1
        for i := range endIdx
            if arr[i] > arr[i + 1]
                tmp := arr[i]
                arr[i] = arr[i + 1]
                arr[i + 1] = tmp
            end
        end
    end
end

func test
    assert 2 (threeSumClosest [1 2 3 4 5] 3)
    assert 0 (threeSumClosest [-1 2 1 -4] 1)
    assert 0 (threeSumClosest [0 0 0] 1)
end
test
```
The issue was in the `abs` function call. In Evy, `abs` is a function, so you need to call it with parentheses: `abs(target - temp)`. 

This corrected code should pass all the tests. 
