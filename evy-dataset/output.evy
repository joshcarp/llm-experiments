// Write a function that takes an array of numbers as input and returns
// the number of elements in the array that are greater than 10 and both
// first and last digits of a number are odd (1, 3, 5, 7, 9).
// For example:
// specialFilter([15, -73, 14, -15]) => 1
// specialFilter([33, -2, -3, 45, 21, 109]) => 2
func specialFilter:num nums:[]num
    count := 0
    for n := range nums
        if n > 10
            s := sprint n
            if (s[0] == "1" or s[0] == "3" or s[0] == "5" or s[0] == "7" or s[0] == "9") and (s[-1] == "1" or s[-1] == "3" or s[-1] == "5" or s[-1] == "7" or s[-1] == "9")
                count = count + 1
            end
        end
    end
    return count
end

func test
    assert 0 (specialFilter [5 -2 1 -5])
    assert 1 (specialFilter [15 -73 14 -15])
    assert 2 (specialFilter [33 -2 -3 45 21 109])
    assert 4 (specialFilter [43 -12 93 125 121 109])
    assert 3 (specialFilter [71 -2 -33 75 21 19])
    assert 0 (specialFilter [1])
    assert 0 (specialFilter [])
end
test