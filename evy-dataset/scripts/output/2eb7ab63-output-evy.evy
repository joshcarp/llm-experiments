
func sublists_count:num arr:[]num sum:num max:num length:num
    if length == 0
        return 1
    end
    if sum == 0 and max == 0 and length > 0
        return 1
    end
    result := 0
    for i := range (len arr)
        if arr[i] <= max
            result = result + (sublists_count arr[i+1:] sum-arr[i] max arr[i] length-1)
        end
    end
    return result
end

func test
    assert 1 (sublists_count [1 2 3 4 5] 5 5 5)
    assert 2 (sublists_count [1 2 3 4 5] 5 5 4)
    assert 0 (sublists_count [1 2 3 4 5] 5 5 3)
    assert 1 (sublists_count [1 2 3 4 5] 4 4 4)
    assert 2 (sublists_count [1 2 3 4 5] 4 4 3)
    assert 0 (sublists_count [1 2 3 4 5] 4 4 2)
    assert 1 (sublists_count [1 2 3 4 5] 3 3 3)
    assert 2 (sublists_count [1 2 3 4 5] 3 3 2)
    assert 0 (sublists_count [1 2 3 4 5] 3 3 1)
end
     

test
