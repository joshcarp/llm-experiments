
func minWindow:string s:string t:string
    needToFind := [0] * 256
    hasFound := [0] * 256
    minBegin := 0
    minEnd := -1
    minWindow := 100000000000000
    for index := range (len t)
        needToFind[t[index]] = needToFind[t[index]] + 1
    end
    count := 0
    begin := 0
    for end := range (len s)
        if needToFind[s[end]] == 0
            continue
        end
        hasFound[s[end]] = hasFound[s[end]] + 1
        if hasFound[s[end]] <= needToFind[s[end]]
            count = count + 1
        end
        if count == (len t)
            while needToFind[s[begin]] == 0 or hasFound[s[begin]] > needToFind[s[begin]]
                if hasFound[s[begin]] > needToFind[s[begin]]
                    hasFound[s[begin]] = hasFound[s[begin]] - 1
                end
                begin = begin + 1
            end
            windowLs := end - begin + 1
            if windowLs < minWindow
                minBegin = begin
                minEnd = end
                minWindow = windowLs
            end
        end
    end
    if count == (len t)
        return s[minBegin:minEnd + 1]
    else
        return ""
    end
end

func test
    print (minWindow "a" "a")
end
test
