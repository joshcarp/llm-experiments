
func Node:{}any
    self:{}any
    self.val = 0
    self.left = {}
    self.right = {}
    return self
end

func Solution:{}any
    self:{}any
    return self
end

func rob self:{}any root:{}any
    res := self.robHelper root
    return max res[0] res[1]
end

func robHelper self:{}any root:{}any
    if root == {}
        return [0 0]
    end
    left := self.robHelper root.left
    right := self.robHelper root.right
    res := [0 0]
    res[0] = max left[0] left[1] + max right[0] right[1]
    res[1] = root.val + left[0] + right[0]
    return res
end

func max:num a:num b:num
    if a > b
        return a
    end
    return b
end

func test
    root := (Node)
    root.val = 3
    root.left = (Node)
    root.left.val = 2
    root.left.left = (Node)
    root.left.left.val = 3
    root.left.right = (Node)
    root.left.right.val = 3
    root.right = (Node)
    root.right.val = 3
    root.right.right = (Node)
    root.right.right.val = 1
    sol := (Solution)
    assert 7 (rob sol root)
end
test
// output:
//line 32 column 1: cannot override builtin function "max"
