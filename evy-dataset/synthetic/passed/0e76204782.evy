//Remove duplicates from a sorted linked list

func ListNode:{}any
    self:{}any
    self.val := 0
    self.next := {}
    return self
end

func deleteDuplicates:any head:any
    if head == {}
        return head
    end
    curr := head
    while curr.next != {}
        if curr.val == curr.next.val
            curr.next = curr.next.next
        else
            curr = curr.next
        end
    end
    return head
end

    head := (ListNode)
    head.val = 1
    head.next = (ListNode)
    head.next.val = 1
    head.next.next = (ListNode)
    head.next.next.val = 2
    head.next.next.next = (ListNode)
    head.next.next.next.val = 3
    head.next.next.next.next = (ListNode)
    head.next.next.next.next.val = 3
    head.next.next.next.next.next = {}
    result := deleteDuplicates head
    print result

