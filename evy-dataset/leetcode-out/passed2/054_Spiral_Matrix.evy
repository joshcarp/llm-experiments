
func spiralOrder:[]num matrix:[][]num
    if matrix == [] or (len matrix) == 0
        return []
    end
    m := len matrix
    n := len matrix[0]
    return getSpiralOrder matrix 0 (m - 1) 0 (n - 1)
end

func getSpiralOrder:[]num matrix:[][]num rStart:num rEnd:num cStart:num cEnd:num
    if rStart > rEnd or cStart > cEnd
        return []
    end
    if rStart == rEnd
        return matrix[rStart][cStart:cEnd + 1]
    end
    if cStart == cEnd
        result:[]num
        for j := range rStart (rEnd + 1)
            result = result + [matrix[j][cEnd]]
        end
        return result
    end
    curr := matrix[rStart][cStart:cEnd + 1] + [matrix[j][cEnd] for j := range (rStart + 1) rEnd] + matrix[rEnd][cStart:cEnd + 1][::-1] + [matrix[j][cStart] for j := range (rStart + 1) (rEnd - 1) -1 -1]
    res := curr + getSpiralOrder matrix (rStart + 1) (rEnd - 1) (cStart + 1) (cEnd - 1)
    return res
end

func test
    matrix := [[1 2 3 4] [5 6 7 8] [9 10 11 12] [13 14 15 16]]
    assert [1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10] (spiralOrder matrix)
end
test
