
func paths:num root:node length:num product:num minElem:num
    if root == null
        return 0
    end
    result := 0
    if length == 1 and product == root.val and minElem == root.val
        result = result + 1
    end
    result = result + (paths root.left length-1 product*root.val (max minElem root.val))
    result = result + (paths root.right length-1 product*root.val (max minElem root.val))
    return result
end

func max:num a:num b:num
    if a > b
        return a
    end
    return b
end

root := {val:1 left:{val:2 left:null right:{val:3 left:null right:null}} right:{val:4 left:null right:{val:5 left:null right:null}}}
print (paths root 3 60 1)
     
