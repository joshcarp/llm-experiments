
func lengthOfLongestSubstringKDistinct:num s:string k:num
    count := [0] * 256
    i := 0
    numDistinct := 0
    maxLen := 0
    for j := range (len s)
        if count[s[j]] == 0
            numDistinct = numDistinct + 1
        end
        count[s[j]] = count[s[j]] + 1
        while numDistinct > k
            count[s[i]] = count[s[i]] - 1
            if count[s[i]] == 0
                numDistinct = numDistinct - 1
            end
            i = i + 1
        end
        maxLen = max (j - i + 1) maxLen
    end
    return maxLen
end

func test
    assert 3 (lengthOfLongestSubstringKDistinct "eceba" 2)
    assert 3 (lengthOfLongestSubstringKDistinct "aa" 1)
    assert 4 (lengthOfLongestSubstringKDistinct "ababbc" 2)
    assert 5 (lengthOfLongestSubstringKDistinct "abcabcbb" 2)
    assert 2 (lengthOfLongestSubstringKDistinct "abcabcbb" 1)
end
test
