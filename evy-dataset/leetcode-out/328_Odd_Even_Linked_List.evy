
func ListNode:{}any
    self:{}any
    self.val = 0
    self.next = {}
    return self
end

func Solution:{}any
    self:{}any
    return self
end

func oddEvenList self:{}any head:{}any
    odd := head
    if head == {}
        return {}
    end
    if head.next == {}
        return head
    end
    evenHead := head.next
    even := evenHead
    while odd.next != {} and even.next != {}
        odd.next = even.next
        odd = odd.next
        even.next = odd.next
        even = even.next
    end
    odd.next = evenHead
    return head
end

func test
    head := (ListNode)
    head.val = 1
    head.next = (ListNode)
    head.next.val = 2
    head.next.next = (ListNode)
    head.next.next.val = 3
    head.next.next.next = (ListNode)
    head.next.next.next.val = 4
    head.next.next.next.next = (ListNode)
    head.next.next.next.next.val = 5
    solution := (Solution)
    result := oddEvenList solution head
    assert 1 (result.val)
    assert 3 (result.next.val)
    assert 5 (result.next.next.val)
    assert 2 (result.next.next.next.val)
    assert 4 (result.next.next.next.next.val)
end
test
// output:
//line 17 column 16: expected no return value, found {}
//line 19 column 18: mismatched type for ==: any, {}
//line 20 column 16: expected no return value, found {}any
//line 24 column 20: mismatched type for !=: any, {}
//line 24 column 34: field access with "." expects map type, found any
//line 25 column 24: field access with "." expects map type, found any
//line 26 column 9: "odd" accepts values of type {}any, found any
//line 27 column 13: field access with "." expects map type, found any
//line 28 column 20: field access with "." expects map type, found any
//line 31 column 12: expected no return value, found {}any
//line 14 column 18: "self" declared but not used
//line 38 column 14: field access with "." expects map type, found any
//line 39 column 14: field access with "." expects map type, found any
//line 40 column 14: field access with "." expects map type, found any
//line 41 column 14: field access with "." expects map type, found any
//line 42 column 14: field access with "." expects map type, found any
//line 43 column 14: field access with "." expects map type, found any
//line 44 column 14: field access with "." expects map type, found any
//line 46 column 40: invalid declaration, function "oddEvenList" has no return value
//line 47 column 15: unknown variable name "result"
//line 47 column 21: expected ")", got "."
//line 47 column 21: expected end of line, found "."
//line 48 column 15: unknown variable name "result"
//line 48 column 21: expected ")", got "."
//line 48 column 21: expected end of line, found "."
//line 49 column 15: unknown variable name "result"
//line 49 column 21: expected ")", got "."
//line 49 column 21: expected end of line, found "."
//line 50 column 15: unknown variable name "result"
//line 50 column 21: expected ")", got "."
//line 50 column 21: expected end of line, found "."
//line 51 column 15: unknown variable name "result"
//line 51 column 21: expected ")", got "."
//line 51 column 21: expected end of line, found "."
