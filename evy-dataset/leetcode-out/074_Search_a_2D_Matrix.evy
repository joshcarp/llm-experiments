
func searchMatrix:bool self:{}any matrix:[][]num target:num
    // binary search
    try
        lsRow := len matrix
        lsCol := len matrix[0]
    catch
        return false
    end
    if target < matrix[0][0] or target > matrix[lsRow - 1][lsCol - 1]
        return false
    end
    begin := 0
    end := lsRow * lsCol - 1
    while begin <= end
        mid := floor (begin + end) / 2
        row := floor mid / lsCol
        col := mid % lsCol
        if matrix[row][col] == target
            return true
        else if matrix[row][col] > target
            end = mid - 1
        else
            begin = mid + 1
        end
    end
    return false
end

func test
    assert true (searchMatrix [] [] 1)
    assert true (searchMatrix [[1 4 7 11 15] [2 5 8 12 19] [3 6 9 16 22] [10 13 14 17 24] [18 21 23 26 30]] 5)
    assert false (searchMatrix [[1 4 7 11 15] [2 5 8 12 19] [3 6 9 16 22] [10 13 14 17 24] [18 21 23 26 30]] 20)
    assert false (searchMatrix [[1 4 7 11 15] [2 5 8 12 19] [3 6 9 16 22] [10 13 14 17 24] [18 21 23 26 30]] 0)
    assert false (searchMatrix [[1 4 7 11 15] [2 5 8 12 19] [3 6 9 16 22] [10 13 14 17 24] [18 21 23 26 30]] 31)
    assert true (searchMatrix [[1]] 1)
    assert false (searchMatrix [[1]] 2)
    assert true (searchMatrix [[1 1]] 1)
    assert false (searchMatrix [[1 1]] 2)
    assert true (searchMatrix [[1 1] [2 2]] 2)
    assert false (searchMatrix [[1 1] [2 2]] 3)
end
test
// output:
//line 4 column 5: unknown function "try"
//line 7 column 5: unknown function "catch"
//line 2 column 50: "target" declared but not used
//line 5 column 9: "lsRow" declared but not used
//line 6 column 9: "lsCol" declared but not used
//line 2 column 24: "self" declared but not used
//line 10 column 8: unknown variable name "target"
//line 11 column 16: return statement not allowed here
//line 14 column 5: unexpected input "end"
//line 15 column 20: unexpected "end"
//line 16 column 31: unexpected "end"
//line 16 column 31: expected ")", got "end"
//line 16 column 31: "floor" takes 1 argument, found 0
//line 16 column 31: expected end of line, found "end"
//line 17 column 26: unexpected whitespace before "/"
//line 17 column 26: "floor" takes 1 argument, found 0
//line 17 column 26: expected end of line, found "/"
//line 18 column 22: unknown variable name "lsCol"
//line 18 column 27: invalid inferred declaration for "col"
//line 19 column 12: unknown variable name "matrix"
//line 20 column 20: return statement not allowed here
//line 21 column 17: unknown variable name "matrix"
//line 22 column 13: at least one statement is required here
//line 23 column 9: unexpected input "else"
//line 17 column 9: "row" declared but not used
//line 26 column 5: unexpected input "end"
//line 27 column 12: return statement not allowed here
//line 28 column 1: unexpected input "end"
//line 29 column 1: unreachable code
//line 31 column 31: "searchMatrix" takes 1st argument of type {}any, found []
//line 32 column 110: "searchMatrix" takes 3 arguments, found 2
//line 33 column 112: "searchMatrix" takes 3 arguments, found 2
//line 34 column 111: "searchMatrix" takes 3 arguments, found 2
//line 35 column 112: "searchMatrix" takes 3 arguments, found 2
//line 36 column 38: "searchMatrix" takes 3 arguments, found 2
//line 37 column 39: "searchMatrix" takes 3 arguments, found 2
//line 38 column 40: "searchMatrix" takes 3 arguments, found 2
//line 39 column 41: "searchMatrix" takes 3 arguments, found 2
//line 40 column 46: "searchMatrix" takes 3 arguments, found 2
//line 41 column 47: "searchMatrix" takes 3 arguments, found 2
//line 43 column 1: unreachable code
