 ```evy
func lcs:string s1:string s2:string
    m := len s1
    n := len s2
    dp := [][]int m+1 n+1
    for i := range m+1
        dp[i][0] = 0
    end
    for j := range n+1
        dp[0][j] = 0
    end
    for i := range 1 m+1
        for j := range 1 n+1
            if s1[i - 1] == s2[j - 1]
                dp[i][j] = dp[i - 1][j - 1] + 1
            else
                dp[i][j] = max (dp[i - 1][j] dp[i][j - 1])
            end
        end
    end
    result:string
    i := m
    j := n
    while i > 0 and j > 0
        if s1[i - 1] == s2[j - 1]
            result = s1[i - 1] + result
            i = i - 1
            j = j - 1
        else
            if dp[i - 1][j] > dp[i][j - 1]
                i = i - 1
            else
                j = j - 1
            end
        end
    end
    return result
end

func max:int a:int b:int
    if a > b
        return a
    else
        return b
    end
end

s1 := "ABCDGH"
s2 := "ACEDFH"
print (lcs s1 s2) // Prints: CD
     
