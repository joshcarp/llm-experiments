
abc := "abcdefghijklmnopqrstuvwxyz"
ord := {a:0 b:1 c:2 d:3 e:4 f:5 g:6 h:7 i:8 j:9 k:10 l:11 m:12 n:13 o:14 p:15 q:16 r:17 s:18 t:19 u:20 v:21 w:22 x:23 y:24 z:25}

func isScramble:bool s1:string s2:string memo:{}any
    if (len s1) != (len s2) or (sort s1) != (sort s2)
        return false
    end
    if (len s1) <= (len s2) and (len s2) <= 1
        return s1 == s2
    end
    if s1 == s2
        return true
    end
    if has memo [s1 s2]
        return memo[s1 s2].(bool)
    end
    n := len s1
    for i := range 1 n
        a := (isScramble s1[:i] s2[:i] memo) and (isScramble s1[i:] s2[i:] memo)
        if !a
            b := (isScramble s1[:i] s2[-i:] memo) and (isScramble s1[i:] s2[:-i] memo)
        end
        if a or b
            memo[s1 s2] = true
            return true
        end
    end
    memo[s1 s2] = false
    return false
end

func sort:string str:string
    s := str
    // bubble sort
    for endIdx := range (len s)-1 0 -1
        for i := range endIdx
            if ascii[s[i]] > ascii[s[i + 1]]
                s = s[:i] + s[i + 1] + s[i] + s[i + 2:]
            end
        end
    end
    return s
end

ascii := {A:65 B:66 C:67 D:68 E:69 F:70 G:71 H:72 I:73 J:74 K:75 L:76 M:77 N:78 O:79 P:80 Q:81 R:82 S:83 T:84 U:85 V:86 W:87 X:88 Y:89 Z:90 a:97 b:98 c:99 d:100 e:101 f:102 g:103 h:104 i:105 j:106 k:107 l:108 m:109 n:110 o:111 p:112 q:113 r:114 s:115 t:116 u:117 v:118 w:119 x:120 y:121 z:122}
ascii[" "] = 32
ascii["!"] = 33
ascii["\""] = 34
ascii["#"] = 35
ascii["$"] = 36
ascii["%"] = 37
ascii["&"] = 38
ascii["'"] = 39
ascii["("] = 40
ascii[")"] = 41
ascii["*"] = 42
ascii["+"] = 43
ascii[","] = 44
ascii["-"] = 45
ascii["."] = 46
ascii["/"] = 47
ascii["0"] = 48
ascii["1"] = 49
ascii["2"] = 50
ascii["3"] = 51
ascii["4"] = 52
ascii["5"] = 53
ascii["6"] = 54
ascii["7"] = 55
ascii["8"] = 56
ascii["9"] = 57
ascii[":"] = 58
ascii[";"] = 59
ascii["<"] = 60
ascii["="] = 61
ascii[">"] = 62
ascii["?"] = 63
ascii["@"] = 64
ascii["["] = 91
ascii["\\"] = 92
ascii["]"] = 93
ascii["^"] = 94
ascii["_"] = 95
ascii["`"] = 96
ascii["{"] = 123
ascii["|"] = 124
ascii["}"] = 125
ascii["~"] = 126

func test
    assert true==(isScramble "great" "rgeat" {})
    assert true==(isScramble "abcde" "caebd" {})
    assert true==(isScramble "a" "a" {})
    assert false==(isScramble "a" "b" {})
    assert true==(isScramble "abb" "bba" {})
    assert false==(isScramble "abb" "bab" {})
    assert true==(isScramble "abab" "aabb" {})
    assert false==(isScramble "abab" "baba" {})
    assert true==(isScramble "ccabcbabc" "abcbbcaac" {})
    assert false==(isScramble "ccabcbabc" "abcbbcaac" {})
    assert true==(isScramble "great" "rgeat" {})
    assert true==(isScramble "abcde" "caebd" {})
    assert true==(isScramble "a" "a" {})
    assert false==(isScramble "a" "b" {})
    assert true==(isScramble "abb" "bba" {})
    assert false==(isScramble "abb" "bab" {})
    assert true==(isScramble "abab" "aabb" {})
    assert false==(isScramble "abab" "baba" {})
    assert true==(isScramble "ccabcbabc" "abcbbcaac" {})
    assert false==(isScramble "ccabcbabc" "abcbbcaac" {})
end
test
// output:
//line 15 column 17: "has" takes 2nd argument of type string, found []string
//line 16 column 24: expected "]", got identifier
//line 16 column 16: expected return value of type bool, found ILLEGAL
//line 22 column 13: "b" declared but not used
//line 24 column 17: unknown variable name "b"
//line 25 column 21: expected "]", got identifier
//line 29 column 13: expected "]", got identifier
//line 38 column 16: unknown variable name "ascii"
//line 2 column 1: "abc" declared but not used
//line 3 column 1: "ord" declared but not used
