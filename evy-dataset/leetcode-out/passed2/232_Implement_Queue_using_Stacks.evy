
func Queue:{}any
    self:{}any
    self.stack1 := []
    self.stack2 := []
    return self
end

func push self:{}any x:num
    self.stack1 = self.stack1 + [x]
end

func pop self:{}any
    if (len self.stack2) == 0
        while (len self.stack1) > 0
            curr := self.stack1[-1]
            self.stack1 = self.stack1[:-1]
            self.stack2 = self.stack2 + [curr]
        end
    end
    self.stack2 = self.stack2[:-1]
end

func peek self:{}any:num
    if (len self.stack2) == 0
        while (len self.stack1) > 0
            curr := self.stack1[-1]
            self.stack1 = self.stack1[:-1]
            self.stack2 = self.stack2 + [curr]
        end
    end
    return self.stack2[-1]
end

func empty self:{}any:bool
    return (len self.stack1) + (len self.stack2) == 0
end

func test
    q := (Queue)
    push q 1
    push q 2
    push q 3
    assert 1 (peek q)
    pop q
    assert 2 (peek q)
    pop q
    assert 3 (peek q)
    pop q
    assert true (empty q)
end
test
