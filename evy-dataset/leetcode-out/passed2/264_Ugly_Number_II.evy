
func nthUglyNumber:num n:num
    if n <= 5
        return n
    end
    dp := [0] * (n + 1)
    l1 := 1
    l2 := 1
    l3 := 1
    dp[1] = 1
    dp[2] = 2
    dp[3] = 3
    dp[4] = 4
    dp[5] = 5
    for i := range 6 (n + 1)
        while dp[l1] * 2 <= dp[i - 1]
            l1 = l1 + 1
        end
        while dp[l2] * 3 <= dp[i - 1]
            l2 = l2 + 1
        end
        while dp[l3] * 5 <= dp[i - 1]
            l3 = l3 + 1
        end
        // print l1 l2 l3
        dp[i] = min (dp[l1] * 2) (min (dp[l2] * 3) (dp[l3] * 5))
    end
    // print dp
    return dp[n]
end

func test
    assert 12 (nthUglyNumber 10)
end
test
