
func twoSum:[]num numbers:[]num target:num
    begin := 0
    end := (len numbers) - 1
    while begin < end
        curr := numbers[begin] + numbers[end]
        if curr == target
            return [begin + 1 end + 1]
        else if curr < target
            begin = begin + 1
        else
            end = end - 1
        end
    end
    return []
end

func test
    assert [1 2] (twoSum [2 7 11 15] 9)
    assert [1 2] (twoSum [2 3 4] 6)
    assert [1 2] (twoSum [2 3 4] 5)
end
test
// output:
//line 2 column 19: "numbers" declared but not used
//line 2 column 33: "target" declared but not used
//line 3 column 5: "begin" declared but not used
//line 4 column 5: missing return
//line 5 column 11: unknown variable name "begin"
//line 6 column 17: unknown variable name "numbers"
//line 6 column 24: invalid inferred declaration for "curr"
//line 7 column 12: unknown variable name "curr"
//line 8 column 21: unknown variable name "begin"
//line 8 column 20: return statement not allowed here
//line 9 column 17: unknown variable name "curr"
//line 10 column 13: unknown variable name "begin"
//line 10 column 13: at least one statement is required here
//line 12 column 13: at least one statement is required here
//line 14 column 5: unexpected input "end"
//line 15 column 12: return statement not allowed here
//line 16 column 1: unexpected input "end"
//line 17 column 1: unreachable code
//line 23 column 1: unreachable code
