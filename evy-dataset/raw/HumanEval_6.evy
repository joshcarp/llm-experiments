// Input to this function is a string represented multiple groups for nested parentheses separated by spaces.
// For each of the group, output the deepest level of nesting of parentheses.
// E.g. (()()) has maximum two levels of nesting while ((())) has three.
// parse_nested_parens "(()()) ((())) () ((())()())" // [2 3 1 3]
func parse_paren_group:num s:string
    depth:num
    max_depth:num
    for c := range s
        if c == "("
            depth = depth + 1
            max_depth = max depth max_depth
        else
            depth = depth - 1
        end
    end
    return max_depth
end

func parse_nested_parens:[]num paren_string:string
    result:[]num
    for x := range (split paren_string " ")
        if x != ""
            result = result + [(parse_paren_group x)]
        end
    end
    return result
end

func test
    assert [2 3 1 3] (parse_nested_parens "(()()) ((())) () ((())()())")
    assert [1 2 3 4] (parse_nested_parens "() (()) ((())) (((())))")
    assert [4] (parse_nested_parens "(()(())((())))")
end
test


