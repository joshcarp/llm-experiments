// For a given list of input numbers, calculate Mean Absolute Deviation around
// the mean of this dataset. Mean Absolute Deviation is the average absolute
// difference between each element and a centerpoint (mean in this case):
// MAD = average | x - x_mean |
// mean_absolute_deviation [1.0 2.0 3.0 4.0]
// 1.0
func mean_absolute_deviation:num numbers:[]num
    mean := (sum numbers) / (len numbers)
    stdev := 0
    for number := range numbers
        stdev = stdev + (abs (number - mean))
    end
    return stdev / (len numbers)
end

func sum:num numbers:[]num
    total := 0
    for number := range numbers
        total = total + number
    end
    return total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end

func test
    assert true ((abs ((mean_absolute_deviation [1 2 3]) - 2 / 3)) < 0.000001)
    assert true ((abs ((mean_absolute_deviation [1 2 3 4]) - 1)) < 0.000001)
    assert true ((abs ((mean_absolute_deviation [1 2 3 4 5]) - 6 / 5)) < 0.000001)
end
test


