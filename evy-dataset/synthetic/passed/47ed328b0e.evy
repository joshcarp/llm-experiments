//Find the nth node from the end of a linked list

func nthToLast:any head:any n:num
    slow := head
    fast := head
    for range n
        if fast == {}
            return {}
        end
        fast = fast.next
    end
    while fast != {}
        slow = slow.next
        fast = fast.next
    end
    return slow
end

    head := {val:1 next:{val:2 next:{val:3 next:{val:4 next:{val:5 next:{} } } } } }
    assert {val:2 next:{val:3 next:{val:4 next:{val:5 next:{} } } } } (nthToLast head 2)
    assert {val:4 next:{val:5 next:{} } } (nthToLast head 1)
    assert {val:1 next:{val:2 next:{val:3 next:{val:4 next:{val:5 next:{} } } } } } (nthToLast head 5)
    assert {} (nthToLast head 6)

