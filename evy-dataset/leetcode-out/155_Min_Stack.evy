
func MinStack:{}any
    self:{}any
    self.stack := []
    self.minStack := []
    return self
end

func push self:{}any x:num
    self.stack = self.stack + [x]
    if (len self.minStack) == 0
        self.minStack = self.minStack + [x]
        return
    end
    if x <= self.minStack[-1]
        self.minStack = self.minStack + [x]
    else
        self.minStack = self.minStack + [self.minStack[-1]]
    end
end

func pop self:{}any
    if (len self.stack) > 0
        self.minStack = self.minStack[:-1]
        self.stack = self.stack[:-1]
    end
end

func top self:{}any:num
    if (len self.stack) > 0
        return self.stack[-1]
    end
    return -1
end

func getMin self:{}any:num
    if (len self.minStack) > 0
        return self.minStack[-1]
    end
    return -1
end

func test
    minStack := (MinStack)
    push minStack 2
    push minStack 0
    push minStack 3
    push minStack 0
    assert 0 (getMin minStack)
    pop minStack
    assert 0 (getMin minStack)
    pop minStack
    assert 2 (getMin minStack)
end
test
// output:
//line 29 column 20: expected identifier, got ":"
//line 29 column 20: expected identifier, got ":"
//line 29 column 20: invalid type declaration for ""
//line 30 column 5: expected identifier, got "if"
//line 30 column 5: expected identifier, got "if"
//line 30 column 5: invalid type declaration for ""
//line 30 column 13: invalid type declaration for "self"
//line 30 column 23: expected identifier, got ")"
//line 30 column 23: expected identifier, got ")"
//line 30 column 23: invalid type declaration for ""
//line 36 column 23: expected identifier, got ":"
//line 36 column 23: expected identifier, got ":"
//line 36 column 23: invalid type declaration for ""
//line 37 column 5: expected identifier, got "if"
//line 37 column 5: expected identifier, got "if"
//line 37 column 5: invalid type declaration for ""
//line 37 column 13: invalid type declaration for "self"
//line 37 column 26: expected identifier, got ")"
//line 37 column 26: expected identifier, got ")"
//line 37 column 26: invalid type declaration for ""
