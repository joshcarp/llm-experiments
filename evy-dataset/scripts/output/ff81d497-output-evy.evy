
func subarrays:num length:num sum:num maxElem:num nums:[]num
    result := 0
    windowSum := 0
    windowMax := 0
    for i := range 0 length
        windowSum = windowSum + nums[i]
        if nums[i] > windowMax
            windowMax = nums[i]
        end
    end
    if windowSum == sum and windowMax == sum
        result = result + 1
    end
    for i := range length (len nums)
        windowSum = windowSum + nums[i] - nums[i - length]
        if nums[i] > windowMax
            windowMax = nums[i]
        else
            windowMax = max windowMax (nums[i] - nums[i - length])
        end
        if windowSum == sum and windowMax == sum
            result = result + 1
        end
    end
    return result
end

func test
    assert 2 (subarrays 2 3 2 [1 2 1 2 1])
    assert 0 (subarrays 2 3 2 [1 2 1 2 2])
    assert 1 (subarrays 3 6 3 [1 2 3 4 5])
    assert 0 (subarrays 3 6 3 [1 2 3 4 6])
end
     

test
