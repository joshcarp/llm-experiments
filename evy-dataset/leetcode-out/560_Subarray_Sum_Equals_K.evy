
func subarraySum:num nums:[]num k:num
    sumMap:{}num
    sumMap["0"] = 1
    count := 0
    currSum := 0
    for n := range nums
        currSum = currSum + n
        count = count + (sumMap[(sprintf "%v" (max (currSum - k) 0))])
        sumMap[(sprintf "%v" currSum)] = (sumMap[(sprintf "%v" (max currSum 0))]) + 1
    end
    return count
end

func test
    assert 2 (subarraySum [1 1 1] 2)
    assert 2 (subarraySum [1 2 3] 3)
    assert 1 (subarraySum [1 2 3] 4)
    assert 0 (subarraySum [1 2 3] 5)
end
test
// output:
//line 10 column 49: panic: no value for map key: "1"
