
func interpolationSearch:num sortedCollection:[]num item:num
    left := 0
    right := (len sortedCollection) - 1
    while left <= right
        if sortedCollection[left] == sortedCollection[right]
            if sortedCollection[left] == item
                return left
            else
                return -1
            end
        end
        point := left + (((item - sortedCollection[left]) * (right - left)) / (sortedCollection[right] - sortedCollection[left]))
        if point < 0 or point >= (len sortedCollection)
            return -1
        end
        current_item := sortedCollection[point]
        if current_item == item
            return point
        else if point < left
            right = left
            left = point
        else if point > right
            left = right
            right = point
        else if item < current_item
            right = point - 1
        else
            left = point + 1
        end
    end
    return -1
end

func interpolationSearchByRecursion:num sortedCollection:[]num item:num left:num right:num
    if sortedCollection[left] == sortedCollection[right]
        if sortedCollection[left] == item
            return left
        else
            return -1
        end
    end
    point := left + (((item - sortedCollection[left]) * (right - left)) / (sortedCollection[right] - sortedCollection[left]))
    if point < 0 or point >= (len sortedCollection)
        return -1
    end
    if sortedCollection[point] == item
        return point
    else if point < left
        return interpolationSearchByRecursion sortedCollection item point left
    else if point > right
        return interpolationSearchByRecursion sortedCollection item right left
    else if sortedCollection[point] > item
        return interpolationSearchByRecursion sortedCollection item left (point - 1)
    else
        return interpolationSearchByRecursion sortedCollection item (point + 1) right
    end
end

func assertSorted collection:[]num
    if collection != (sort collection)
        panic "Collection must be ascending sorted"
    end
    return true
end

func test
    collection := [10 30 40 45 50 66 77 93]
    assertSorted collection
    target := 67
    result := interpolationSearch collection target
    if result != -1
        print (sprintf "%v found at positions: %v\n") target result
    else
        print "Not found\n"
    end
end
test

test
