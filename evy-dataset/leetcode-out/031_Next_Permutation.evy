
func nextPermutation:void nums:[]num
    ls := len nums
    if ls <= 1
        return
    end
    pair := []
    for i := range ls
        for j := range i+1 ls
            if nums[i] < nums[j]
                pair = pair + [[i j]]
            end
        end
    end
    pos := 0
    if (len pair) > 0
        swap nums pair[-1][0] pair[-1][1]
        pos = pair[-1][0] + 1
    end
    for i := range pos ls
        for j := range i+1 ls
            if nums[i] > nums[j]
                swap nums i j
            end
        end
    end
end

func swap:void nums:[]num index1:num index2:num
    if index1 == index2
        return
    end
    tmp := nums[index1]
    nums[index1] = nums[index2]
    nums[index2] = tmp
end

func test
    nums := [1 2 3]
    nextPermutation nums
    assert [1 3 2] nums
    nums = [3 2 1]
    nextPermutation nums
    assert [1 2 3] nums
    nums = [1 1 5]
    nextPermutation nums
    assert [1 5 1] nums
    nums = [1]
    nextPermutation nums
    assert [1] nums
end
test
// output:
//line 2 column 1: invalid return type: nums
//line 29 column 1: invalid return type: nums
