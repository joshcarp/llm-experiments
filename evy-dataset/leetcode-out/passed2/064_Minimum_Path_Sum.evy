
func minPathSum:num grid:[][]num
    height := len grid
    if height == 0
        return 0
    end
    width := len grid[0]
    pathmap := []
    for i := range height
        pathmap = pathmap + [[100000000000] * width]
    end
    pathmap[0][0] = grid[0][0]
    for i := range height
        for j := range width
            compare := [pathmap[i][j]]
            if i - 1 >= 0
                compare = compare + [pathmap[i - 1][j] + grid[i][j]]
            end
            if j - 1 >= 0
                compare = compare + [pathmap[i][j - 1] + grid[i][j]]
            end
            pathmap[i][j] = minVal compare
        end
    end
    return pathmap[-1][-1]
end

func minVal:num nums:[]num
    result := nums[0]
    for n := range nums[1:]
        if result > n
            result = n
        end
    end
    return result
end

func test
    assert 7 (minPathSum [[1 3 1] [1 5 1] [4 2 1]])
    assert 12 (minPathSum [[1 2 3] [4 5 6]])
    assert 0 (minPathSum [[]])
end
test
