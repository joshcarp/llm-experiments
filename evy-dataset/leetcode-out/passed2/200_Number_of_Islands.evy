
func numIslands:num grid:[][]string
    if grid == [] or (len grid) == 0
        return 0
    end
    islands := 0
    for i := range (len grid)
        for j := range (len grid[i])
            if grid[i][j] == "1"
                explore grid i j
                islands = islands + 1
            end
        end
    end
    return islands
end

func explore grid:[][]string i:num j:num
    grid[i][j] = "X"
    if i - 1 >= 0 and grid[i - 1][j] == "1"
        explore grid (i - 1) j
    end
    if j - 1 >= 0 and grid[i][j - 1] == "1"
        explore grid i (j - 1)
    end
    if i + 1 < (len grid) and grid[i + 1][j] == "1"
        explore grid (i + 1) j
    end
    if j + 1 < (len grid[i]) and grid[i][j + 1] == "1"
        explore grid i (j + 1)
    end
end

func test
    assert 1 (numIslands [["1" "1" "1" "1" "0"] ["1" "1" "0" "1" "0"] ["1" "1" "0" "0" "0"] ["0" "0" "0" "0" "0"]])
    assert 3 (numIslands [["1" "1" "0" "0" "0"] ["1" "1" "0" "0" "0"] ["0" "0" "1" "0" "0"] ["0" "0" "0" "1" "1"]])
end
test
