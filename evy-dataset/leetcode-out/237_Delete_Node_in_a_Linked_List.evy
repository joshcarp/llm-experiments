
func ListNode:{}any
    self:{}any
    self.val = 0
    self.next = {}
    return self
end

func Solution:{}any
    self:{}any
    return self
end

func deleteNode self:{}any node:{}any
    node.val = node.next.val.num
    node.next = node.next.next.({}any)
end

func test
    node := (ListNode)
    node.val = 1
    node.next = (ListNode)
    node.next.val = 2
    node.next.next = (ListNode)
    node.next.next.val = 3
    node.next.next.next = (ListNode)
    node.next.next.next.val = 4
    node.next.next.next.next = (ListNode)
    node.next.next.next.next.val = 5
    solution := (Solution)
    deleteNode solution node
    assert 2 (node.val.num)
    assert 3 (node.next.val.num)
    assert 4 (node.next.next.val.num)
    assert 5 (node.next.next.next.val.num)
end
test
// output:
//line 15 column 25: field access with "." expects map type, found any
//line 16 column 26: field access with "." expects map type, found any
//line 15 column 5: at least one statement is required here
//line 14 column 17: "self" declared but not used
//line 23 column 14: field access with "." expects map type, found any
//line 24 column 14: field access with "." expects map type, found any
//line 25 column 14: field access with "." expects map type, found any
//line 26 column 14: field access with "." expects map type, found any
//line 27 column 14: field access with "." expects map type, found any
//line 28 column 14: field access with "." expects map type, found any
//line 29 column 14: field access with "." expects map type, found any
//line 32 column 23: field access with "." expects map type, found any
//line 32 column 24: expected ")", got "num"
//line 32 column 24: expected end of line, found "num"
//line 33 column 24: field access with "." expects map type, found any
//line 33 column 25: expected ")", got identifier
//line 33 column 25: expected end of line, found val
//line 34 column 24: field access with "." expects map type, found any
//line 34 column 25: expected ")", got identifier
//line 34 column 25: expected end of line, found next
//line 35 column 24: field access with "." expects map type, found any
//line 35 column 25: expected ")", got identifier
//line 35 column 25: expected end of line, found next
