//Find the lowest common ancestor of two nodes in a binary tree

func lowestCommonAncestor:any root:any p:any q:any
    if root == {} or root == p or root == q
        return root
    end
    left := lowestCommonAncestor root["left"] p q
    right := lowestCommonAncestor root["right"] p q
    if left == {}
        return right
    else if right == {}
        return left
    else
        return root
    end
end

    root := {val:3 left:{val:5 left:{val:6} right:{val:2 left:{val:7} right:{val:4}}} right:{val:1 left:{val:0} right:{val:8}}}
    p := root["left"]
    q := root["right"]
    lca := lowestCommonAncestor root p q
    assert 3 (lca["val"])

