
func letterCasePermutation:string s:string
    b := 0
    for letter := range s
        if letter.isalpha()
            b = b + 1
        end
    end
    ans := []
    for bits := range (pow 2 b)
        b := 0
        word := []
        for letter := range s
            if letter.isalpha()
                if (bits >> b) & 1 == 1
                    word = word + [lower letter]
                else
                    word = word + [upper letter]
                end
                b = b + 1
            else
                word = word + [letter]
            end
        end
        ans = ans + [join word ""]
    end
    return ans
end

func test
    assert ["a1b2" "a1B2" "A1b2" "A1B2"] (letterCasePermutation "a1b2")
    assert ["123" "123"] (letterCasePermutation "123")
    assert ["3z4" "3Z4"] (letterCasePermutation "3z4")
    assert ["a" "A"] (letterCasePermutation "a")
    assert ["1" "1"] (letterCasePermutation "1")
end
test
// output:
//line 15 column 32: illegal character "&"
