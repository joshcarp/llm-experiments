
func largestPalindrome:num n:num
    if n == 1
        return 9
    end
    for a := range 2 (9 * pow 10 n-1)
        hi := (pow 10 n) - a
        lo := str2num (reverse (sprint hi))
        if (pow a 2) - (4 * lo) < 0
            continue
        end
        if (pow ((pow (a 2) - (4 * lo)) 0.5) 2) == (pow (a 2) - (4 * lo))
            return ((lo + (pow 10 n) * (pow 10 n - a)) % 1337)
        end
    end
    return -1
end

func reverse:string str:string
    reversed := ""
    for i := range (len str)
        reversed = str[i] + reversed
    end
    return reversed
end

func test
    assert 9 (largestPalindrome 1)
    assert 9009 (largestPalindrome 2)
    assert 906609 (largestPalindrome 3)
end
test
// output:
//line 6 column 27: function call must be parenthesized: (pow ...)
//line 6 column 31: expected ")", got ""
//line 6 column 31: range cannot be empty
//line 6 column 31: unexpected input 10
//line 7 column 28: unknown variable name "a"
//line 7 column 29: invalid inferred declaration for "hi"
//line 8 column 40: unknown variable name "hi"
//line 9 column 17: unknown variable name "a"
//line 9 column 19: "pow" takes 2 arguments, found 0
//line 9 column 19: expected ")", got ""
//line 10 column 13: unknown function "continue"
//line 10 column 13: at least one statement is required here
//line 12 column 24: unknown variable name "a"
//line 12 column 26: expected ")", got ""
//line 12 column 26: "pow" takes 2 arguments, found 0
//line 12 column 26: expected ")", got ""
//line 12 column 26: expected ")", got ""
//line 12 column 26: "pow" takes 2 arguments, found 0
//line 12 column 26: expected ")", got ""
//line 13 column 50: unexpected whitespace after "-"
//line 13 column 52: "pow" takes 2 arguments, found 0
//line 13 column 52: expected ")", got identifier
//line 13 column 52: expected ")", got identifier
//line 13 column 52: expected ")", got identifier
//line 13 column 20: expected return value of type num, found ILLEGAL
//line 15 column 5: missing return
//line 16 column 12: return statement not allowed here
//line 17 column 1: unexpected input "end"
//line 18 column 1: unreachable code
//line 26 column 1: unreachable code
//line 32 column 1: unreachable code
