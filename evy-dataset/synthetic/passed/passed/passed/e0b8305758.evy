//Check if a binary tree is a binary search tree

func isBST:bool root:{}any
    return isBSTHelper root -2147483648 2147483647
end

func isBSTHelper:bool root:{}any minn:num maxx:num
    if root == {}
        return true
    end
    if (has root "val") and (root.val.(num) <= minn or root.val.(num) >= maxx)
        return false
    end
    left:any
    right:any
    left = root["left"]
    right = root["right"]
    return (isBSTHelper left.({}any) minn root.val.(num)) and (isBSTHelper right.({}any) root.val.(num) maxx)
end

root := {val:2 left:{val:1 left:{} right:{}} right:{val:3 left:{} right:{}}}
assert true (isBST root)
root = {val:5 left:{val:1 left:{} right:{}} right:{val:4 left:{} right:{}}}
assert false (isBST root)

