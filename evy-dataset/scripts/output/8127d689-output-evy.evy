
func isComplete:bool root:Node
    if root == nil
        return true
    end
    leftHeight := height root.left
    rightHeight := height root.right
    return leftHeight == rightHeight and isComplete root.left and isComplete root.right
end

func height:num root:Node
    if root == nil
        return 0
    end
    leftHeight := height root.left + 1
    rightHeight := height root.right + 1
    if leftHeight > rightHeight
        return leftHeight
    end
    return rightHeight
end

func test
    root := buildTree
    assert true (isComplete root)
    root.left.left = buildTree
    assert false (isComplete root)
    root.left.left = nil
    root.left.right = buildTree
    assert true (isComplete root)
end

root := buildTree
assert true (isComplete root)
root.left.left = buildTree
assert false (isComplete root)
root.left.left = nil
root.left.right = buildTree
assert true (isComplete root)

     

test
