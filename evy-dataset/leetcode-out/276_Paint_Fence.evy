
func numWays:num n:num k:num
    if n == 0
        return 0
    end
    if n == 1
        return k
    end
    dp := [0 0]
    dp[0] = k
    dp[1] = k * k
    for i := range 2 n
        temp := dp[1]
        dp[1] = (sum dp) * (k - 1)
        dp[0] = temp
    end
    return dp[1]
end

func sum:[]num nums:[]num
    sum := 0
    for n := range nums
        sum = sum + n
    end
    return [sum]
end

func test
    assert 0 (numWays 0 3)
    assert 3 (numWays 1 3)
    assert 6 (numWays 2 3)
    assert 12 (numWays 3 3)
    assert 21 (numWays 4 3)
    assert 36 (numWays 5 3)
end
test
// output:
//line 14 column 9: "(dp[1])" accepts values of type num, found []num
//line 12 column 9: "i" declared but not used
//line 21 column 5: invalid declaration of "sum", already used as function name
//line 23 column 9: cannot assign to "sum" as it is a function not a variable
//line 23 column 9: at least one statement is required here
//line 22 column 9: "n" declared but not used
//line 25 column 13: function call must be parenthesized: (sum ...)
//line 25 column 12: expected return value of type []num, found ILLEGAL
