
func generateParenthesis:[]string n:num
    if n == 1
        return ["()"]
    end
    lastList := generateParenthesis n-1
    res := []
    for t := range lastList
        curr := t + ")"
        for index := range (len curr)
            if curr[index] == ")"
                res = res + [curr[:index] + "(" + curr[index:]]
            end
        end
    end
    return res
end

func test
    assert ["(())" "()()"] (generateParenthesis 2)
    assert ["((()))" "(()())" "(())()" "()(())" "()()()"] (generateParenthesis 3)
end
test// output:
//line 10 column 13: invalid declaration of "index", already used as function name
//line 11 column 26: "index" takes 2 arguments, found 0
//line 12 column 41: "index" takes 2 arguments, found 0
//line 12 column 43: unexpected whitespace after "+"
//line 12 column 17: at least one statement is required here
//line 15 column 5: missing return
//line 16 column 12: unknown variable name "res"
//line 16 column 12: return statement not allowed here
//line 17 column 1: unexpected input "end"
//line 18 column 1: unreachable code
//line 23 column 1: unreachable code
