
func kClosest:[]num points:[][]num K:num
    return nsmallest K points (lambda x: x[0] * x[0] + x[1] * x[1])
end

func nsmallest:[][]num K:num arr:[][]num key:func
    // heapify the array
    heapify arr key
    // extract K smallest elements
    result:[][]num
    for range K
        result = result + [arr[0]]
        arr = arr[1:]
        heapify arr key
    end
    return result
end

func heapify arr:[][]num key:func
    n := len arr
    for i := range (floor n/2)-1 -1 -1
        heapifyDown arr i n key
    end
end

func heapifyDown arr:[][]num i:num n:num key:func
    left := 2 * i + 1
    right := 2 * i + 2
    smallest := i
    if left < n and key(arr[left]) < key(arr[smallest])
        smallest = left
    end
    if right < n and key(arr[right]) < key(arr[smallest])
        smallest = right
    end
    if smallest != i
        tmp := arr[i]
        arr[i] = arr[smallest]
        arr[smallest] = tmp
        heapifyDown arr smallest n key
    end
end

func test
    assert [[1 1] [2 2]] (kClosest [[1 3] [2 2] [3 1]] 2)
    assert [[1 1] [2 2] [3 3]] (kClosest [[3 3] [5 -1] [1 1] [2 2]] 3)
end
test
// output:
//panic: runtime error: invalid memory address or nil pointer dereference
//[signal SIGSEGV: segmentation violation code=0x2 addr=0x8 pc=0x104f333f0]
//
//goroutine 1 [running]:
//evylang.dev/evy/pkg/parser.(*parser).parseFuncSignatures(0x14000108be0, {0x14000028d00, 0x8, 0x4?})
//	/home/runner/work/evy/evy/pkg/parser/parser.go:134 +0x70
//evylang.dev/evy/pkg/parser.newParser({0x14000126900?, 0x140001aa3c0?}, {0x140001a3260?, 0x140001a3140?, 0x140001a3170?})
//	/home/runner/work/evy/evy/pkg/parser/parser.go:99 +0x364
//evylang.dev/evy/pkg/parser.Parse({0x14000126900?, 0x140001a3260?}, {0x140001a3260?, 0x140001a3140?, 0x140001a3170?})
//	/home/runner/work/evy/evy/pkg/parser/parser.go:24 +0x2c
//evylang.dev/evy/pkg/evaluator.(*Evaluator).Run(0x14000108b40, {0x14000126900, 0x461})
//	/home/runner/work/evy/evy/pkg/evaluator/evaluator.go:169 +0x120
//main.(*runCmd).Run(0x1400007edd8)
//	/home/runner/work/evy/evy/main.go:152 +0x198
//reflect.Value.call({0x1054de480?, 0x1400007edd8?, 0x14000037a98?}, {0x104fb8530, 0x4}, {0x14000037b58, 0x0, 0x104f8fd08?})
//	/home/runner/.cache/hermit/pkg/go-1.22.3/src/reflect/value.go:596 +0x970
//reflect.Value.Call({0x1054de480?, 0x1400007edd8?, 0x1054d7b60?}, {0x14000037b58?, 0x0?, 0x14000037b10?})
//	/home/runner/.cache/hermit/pkg/go-1.22.3/src/reflect/value.go:380 +0x94
//github.com/alecthomas/kong.callFunction({0x1054de480?, 0x1400007edd8?, 0x14000037d60?}, 0x140001a28a0)
//	/home/runner/go/pkg/mod/github.com/alecthomas/kong@v0.9.0/callbacks.go:98 +0x390
//github.com/alecthomas/kong.(*Context).RunNode(0x1400014e080, 0x1400016a0f0, {0x0, 0x0, 0x1400015a280?})
//	/home/runner/go/pkg/mod/github.com/alecthomas/kong@v0.9.0/context.go:774 +0x630
//github.com/alecthomas/kong.(*Context).Run(0x1054a5620?, {0x0?, 0x14000157f18?, 0x7?})
//	/home/runner/go/pkg/mod/github.com/alecthomas/kong@v0.9.0/context.go:799 +0x138
//main.main()
//	/home/runner/work/evy/evy/main.go:97 +0x150
